<?xml version='1.0'?>

<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0"
  xmlns:exsl="http://exslt.org/common"
  xmlns:str="http://exslt.org/strings"
  extension-element-prefixes="exsl str"
>

  <xsl:output method="text" encoding="UTF-8"/>

  <!-- JSON Escaped Strings -->
  <!-- stolen from PreTeXt -->
  <xsl:template name="escape-json-string">
    <xsl:param name="text"/>
    <xsl:variable name="sans-backslash" select="str:replace($text,           '\',      '\\'     )"/>
    <xsl:variable name="sans-slash"     select="str:replace($sans-backslash, '/',      '\/'     )"/>
    <xsl:variable name="sans-quote"     select="str:replace($sans-slash,     '&#x22;', '\&#x22;')"/>
    <xsl:variable name="sans-tab"       select="str:replace($sans-quote,     '&#x09;', '\t'     )"/>
    <xsl:variable name="sans-newline"   select="str:replace($sans-tab,       '&#x0a;', '\n'     )"/>
    <xsl:variable name="sans-return"    select="str:replace($sans-newline,   '&#x0d;', '\r'     )"/>
    <xsl:variable name="sans-dollar"    select="str:replace($sans-return,    '$',      '\\$'    )"/><!-- added by clontz -->
    <xsl:value-of select="$sans-dollar" />
  </xsl:template>
  
  <!-- Basic Jupyter Cell -->
  <xsl:template name="jupyter-cell">
    <xsl:param name="source"/>
    <xsl:param name="editable"/>
    <xsl:param name="first-cell"/>
    <xsl:if test="not($first-cell)">,</xsl:if>
    {
     "cell_type": "markdown",
     "metadata": {
      "collapsed": false,
      "editable": <xsl:choose><xsl:when test="$editable"><xsl:value-of select="normalize-space($editable)"/></xsl:when><xsl:otherwise>false</xsl:otherwise></xsl:choose>
     },
    "source": 
    <xsl:choose>
      <xsl:when test="$editable">
        "&lt;div class=\"editable\"&gt;Enter your response/code here.&lt;/div&gt;"
      </xsl:when>
      <xsl:otherwise>
        "&lt;div class=\"not-editable\"&gt;\n\n<xsl:call-template name="escape-json-string"><xsl:with-param name="text" select="normalize-space($source)"/></xsl:call-template>\n\n&lt;/div&gt;"
      </xsl:otherwise>
    </xsl:choose>
    }
  </xsl:template>

  <!-- Jupyter JSON object -->
  <xsl:template match="/">
    {"nbformat": 4,"nbformat_minor": 0,"cells": [
      <xsl:call-template name="jupyter-cell">
        <xsl:with-param name="first-cell">true</xsl:with-param>
        <xsl:with-param name="source">
          &lt;style&gt;
            .editable{margin:1em;color:#ccc;font-size:2em;text-align:center;}
            .not-editable{background-color:#f8f8f8;padding:1em;border-radius:10px;box-shadow:4px 4px 3px #ddd;margin:5px;}
            .sidebyside{display:flex;justify-content:center}
            .sidebyside > *{margin-right:1em}
            .not-implemented{color:#f00;font-weight:bold;}
            caption{caption-side:top;white-space: nowrap;color:rgba(0,0,0,.45)}
            figcaption{padding-top:0.75em;padding-bottom:0.3em;color:rgba(0,0,0,.45)}
            .fillin{display:inline-block;width:10em;margin-left:0.2em;margin-right:0.2em;height:1em;border-bottom:1px black solid;}
            .fn{font-size:0.8em;color:rgba(0,0,0.45)}
          &lt;/style&gt;
          &lt;h1 class="foo"&gt;1.1 <xsl:value-of select="section/title"/>&lt;/h1&gt;
          &lt;span style="display:none;"&gt;\(\newcommand{\amp}{&amp;}\)&lt;/span&gt;
        </xsl:with-param>
      </xsl:call-template>
      <xsl:apply-templates select="//activity|//exploration"/>
    ]}
  </xsl:template>


  <!-- Supported PreTeXt elements -->

  <xsl:template match="exploration|activity">
    <xsl:call-template name="jupyter-cell">
      <xsl:with-param name="source">
        &lt;h2&gt; <xsl:if test="local-name()='exploration'">Preview </xsl:if>
        Activity 1.1.<xsl:value-of select="position()"/>&lt;/h2&gt;
      </xsl:with-param>
    </xsl:call-template>
    <xsl:choose>
      <xsl:when test="statement">
        <xsl:apply-templates select="statement"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="*"/>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="not(.//ol[@label='a.'])">
      <xsl:call-template name="jupyter-cell">
        <xsl:with-param name="editable">true</xsl:with-param>
      </xsl:call-template>
    </xsl:if>
  </xsl:template>

  <xsl:template match="statement">
    <xsl:apply-templates select="*"/>
  </xsl:template>

  <xsl:template match="p">
    <xsl:choose>
      <xsl:when test="text()[normalize-space()]">
        <xsl:call-template name="jupyter-cell">
          <xsl:with-param name="source">
            <xsl:apply-templates select="." mode="markdown"/>
          </xsl:with-param>
        </xsl:call-template>
      </xsl:when>
      <xsl:otherwise>
        <xsl:apply-templates select="*"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
  <xsl:template match="p" mode="markdown">
    &lt;span&gt;<xsl:apply-templates select="text()|*" mode="markdown"/>&lt;/span&gt;
  </xsl:template>

  <xsl:template match="sidebyside">
    <xsl:call-template name="jupyter-cell">
      <xsl:with-param name="source">
        &lt;div class="sidebyside"&gt;
          <xsl:apply-templates select="*" mode="markdown"/>
        &lt;/div&gt;
      </xsl:with-param>
    </xsl:call-template>
  </xsl:template>

  <xsl:template match="ol|ul">
    <xsl:apply-templates select="*"/>
  </xsl:template>
  <xsl:template match="ol" mode="markdown">
    &lt;ol&gt;<xsl:apply-templates select="li" mode="markdown"/>&lt;/ol&gt;
  </xsl:template>
  <xsl:template match="ul" mode="markdown">
    &lt;ul&gt;<xsl:apply-templates select="li" mode="markdown"/>&lt;/ul&gt;
  </xsl:template>

  <xsl:template match="li">
    <xsl:choose>
      <xsl:when test="p">
        <xsl:call-template name="jupyter-cell">
          <xsl:with-param name="source">
            &lt;b&gt;<xsl:number format="a. "/>&lt;/b&gt;
            <xsl:apply-templates select="*[position()=1]" mode="markdown"/>
          </xsl:with-param>
        </xsl:call-template>
        <xsl:apply-templates select="*[position()>1]"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:call-template name="jupyter-cell">
          <xsl:with-param name="source">
            &lt;b&gt;<xsl:number format="a. "/>&lt;/b&gt; 
            <xsl:apply-templates select="*|text()" mode="markdown"/>
          </xsl:with-param>
        </xsl:call-template>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:call-template name="jupyter-cell">
      <xsl:with-param name="editable">true</xsl:with-param>
    </xsl:call-template>
  </xsl:template>
  <xsl:template match="li" mode="markdown">
    &lt;li&gt;<xsl:apply-templates select="*|text()" mode="markdown"/>&lt;/li&gt;
  </xsl:template>

  <xsl:template match="image|figure|table|tabular">
    <xsl:call-template name="jupyter-cell">
      <xsl:with-param name="source">
        <xsl:apply-templates select="." mode="markdown"/>
      </xsl:with-param>
    </xsl:call-template>
  </xsl:template>
  <xsl:template match="image" mode="markdown">
    &lt;div&gt;&lt;img src="apc/src/<xsl:value-of select="@source"/>.svg"/&gt;&lt;/div&gt;
  </xsl:template>
  <xsl:template match="figure" mode="markdown">
    &lt;div&gt;&lt;figure&gt;&lt;figcaption&gt;<xsl:apply-templates select="caption" mode="markdown"/>&lt;/figcaption&gt;<xsl:apply-templates select="image" mode="markdown"/>&lt;/figure&gt;&lt;/div&gt;
  </xsl:template>
  <xsl:template match="table" mode="markdown">
    &lt;div&gt;&lt;table&gt;&lt;caption&gt;<xsl:apply-templates select="caption" mode="markdown"/>&lt;/caption&gt;<xsl:apply-templates select="tabular/row" mode="markdown"/>&lt;/table&gt;&lt;/div&gt;
  </xsl:template>
  <xsl:template match="tabular" mode="markdown">
    &lt;div&gt;&lt;table&gt;<xsl:apply-templates select="row" mode="markdown"/>&lt;/table&gt;&lt;/div&gt;
  </xsl:template>

  <xsl:template match="row" mode="markdown">
    &lt;tr&gt;<xsl:apply-templates select="cell" mode="markdown"/>&lt;/tr&gt;
  </xsl:template>

  <xsl:template match="cell" mode="markdown">&lt;td&gt;<xsl:apply-templates select="text()|*" mode="markdown"/>&lt;/td&gt;</xsl:template>

  <xsl:template match="fn" mode="markdown"> &lt;span class="fn"&gt;(<xsl:apply-templates select="text()|*" mode="markdown"/>)&lt;/span&gt; </xsl:template>
  <xsl:template match="q" mode="markdown">"<xsl:apply-templates select="text()|*" mode="markdown"/>"</xsl:template>
  <xsl:template match="m" mode="markdown">\(<xsl:apply-templates select="text()|*" mode="markdown"/>\)</xsl:template>
  <xsl:template match="me" mode="markdown">\[<xsl:apply-templates select="text()|*" mode="markdown"/>\]</xsl:template>
  <xsl:template match="md" mode="markdown">\[\begin{align*}<xsl:apply-templates select="mrow" mode="markdown"/>\end{align*}\]</xsl:template>
  <xsl:template match="mrow" mode="markdown"><xsl:apply-templates select="text()" mode="markdown"/>\\</xsl:template>
  <xsl:template match="caption" mode="markdown"><xsl:apply-templates select="text()|*" mode="markdown"/></xsl:template>
  <xsl:template match="fillin" mode="markdown">&lt;span class="fillin"&gt;&lt;/span&gt;</xsl:template>

  <xsl:template match="xref" mode="markdown"> &lt;span class="not-implemented"&gt;XREF NOT IMPLEMENTED&lt;/span&gt; </xsl:template>

</xsl:stylesheet>